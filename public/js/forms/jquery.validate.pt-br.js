/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 7);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./resources/js/forms/jquery.validate.pt-br.js":
/*!*****************************************************!*\
  !*** ./resources/js/forms/jquery.validate.pt-br.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Seta um padrao para os retornos do validate\n *\n */\n$.validator.setDefaults({\n  errorElement: 'span',\n  errorClass: 'help-block',\n  highlight: function highlight(element) {\n    $(element).closest('.form-group').addClass('has-error').removeClass('has-success');\n  },\n  unhighlight: function unhighlight(element) {\n    $(element).closest('.form-group').removeClass('has-error').addClass('has-success');\n  },\n  errorPlacement: function errorPlacement(error, element) {\n    if (element.prop('type') === 'checkbox' || element.prop('type') === 'radio' || element.prop('type') === 'file' || element.prop('type') === 'select-one') {\n      error.insertAfter(element.parent());\n    } else {\n      error.insertAfter(element);\n    }\n  }\n});\n/**\n * Resolve o problema com o Select Picker\n *\n */\n// $('select.selectpicker').on('change', function () {\n// \t$(this).valid();\n// });\n\n/**\n * Seta um padrao para todas as mensagens de erro\n *\n */\n\n$.extend($.validator, {\n  messages: {\n    accept: '<i class=\"fas fa-times pr-2 pl-2\"></i> O arquivo enviado deve ser uma imagem!',\n    required: '<i class=\"fas fa-times pr-2 pl-2\"></i> Campo obrigatório',\n    remote: '<i class=\"fas fa-times pr-2 pl-2\"></i> Este dado já está cadastrado',\n    email: '<i class=\"fas fa-times pr-2 pl-2\"></i> Este não é um e-mail válido',\n    url: '<i class=\"fas fa-times pr-2 pl-2\"></i> Digite uma url válida',\n    date: '<i class=\"fas fa-times pr-2 pl-2\"></i> Digite uma data válida',\n    dateISO: '<i class=\"fas fa-times pr-2 pl-2\"></i> Digite uma url válida (ISO)',\n    number: '<i class=\"fas fa-times pr-2 pl-2\"></i> Digite um número válido',\n    digits: '<i class=\"fas fa-times pr-2 pl-2\"></i> Só é permitido números',\n    creditcard: '<i class=\"fas fa-times pr-2 pl-2\"></i> Digite um número de cartão de créditos válido',\n    equalTo: '<i class=\"fas fa-times pr-2 pl-2\"></i> Deve ser igual ao campo anterior',\n    maxlength: $.validator.format('<i class=\"fas fa-times pr-2 pl-2\"></i> Máximo de {0} caracteres'),\n    minlength: $.validator.format('<i class=\"fas fa-times pr-2 pl-2\"></i> Mínimo de {0} caracteres'),\n    rangelength: $.validator.format('<i class=\"fas fa-times pr-2 pl-2\"></i> Digite um valor entre {0} e {1} caracteres'),\n    range: $.validator.format('<i class=\"fas fa-times pr-2 pl-2\"></i> Digite um valor entre {0} e {1} caracteres'),\n    max: $.validator.format('<i class=\"fas fa-times pr-2 pl-2\"></i> Insira um valor menor ou igual a {0}'),\n    min: $.validator.format('<i class=\"fas fa-times pr-2 pl-2\"></i> Insira um valor maior ou igual a {0}'),\n    step: $.validator.format('<i class=\"fas fa-times pr-2 pl-2\"></i> Digite um múltiplo de {0}.')\n  }\n});\n$(document).ready(function () {\n  /**\n   * Bloqueia numeros\n   */\n  jQuery.validator.addMethod(\"lettersOnly\", function (value, element) {\n    return this.optional(element) || /^[a-zâêôãõáéíóúà ]+$/i.test(value); //return this.optional(element) || /^[a-zA-Z]+$/i.test(value);\n  }, '<i class=\"fas fa-times pr-2 pl-2\"></i> &Eacute; permitido digitar somente letras.');\n  /**\n   * Bloqueia letras\n   */\n\n  jQuery.validator.addMethod(\"numbersOnly\", function (value, element) {\n    return this.optional(element) || /^[0-9]+$/i.test(value);\n  }, '<i class=\"fas fa-times pr-2 pl-2\"></i> &Eacute; permitido digitar somente n&uacute;meros.');\n  /**\n   * Somente telefone\n   */\n\n  jQuery.validator.addMethod(\"phoneOnly\", function (value, element) {\n    return this.optional(element) || /^(\\([0-9]{3}\\) |[0-9]{3}-)[0-9]{3}-[0-9]{4}$/i.test(value); // return this.optional(element) || /(\\([1-9][0-9]\\)?|[1-9][0-9])\\s?([9]{1})?([0-9]{4})-?([0-9]{4})/i.test(value);\n  }, '<i class=\"fas fa-times pr-2 pl-2\"></i> Este n&uacute;mero de telefone n&atilde;o &eacute; v&aacute;lido.');\n  /**\n   * Bloqueia letras\n   */\n\n  jQuery.validator.addMethod(\"decimalOnly\", function (value, element) {\n    return this.optional(element) || /^\\d+,\\d{2}$/i.test(value);\n  }, '<i class=\"fas fa-times pr-2 pl-2\"></i> &Eacute; permitido digitar somente n&uacute;meros decimais.');\n  /**\n   * Somente url\n   */\n\n  jQuery.validator.addMethod(\"urlOnly\", function (value, element) {\n    return this.optional(element) || /^[a-zA-Z0-9!@#$%^&*)(]+$/i.test(value);\n  }, '<i class=\"fas fa-times pr-2 pl-2\"></i> Digite um link v&aacute;lido.');\n  /**\n  * Somente email\n  */\n\n  jQuery.validator.addMethod(\"emailOnly\", function (value, element) {\n    return this.optional(element) || /^\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/.test(value);\n  }, '<i class=\"fas fa-times pr-2 pl-2\"></i> Digite um e-mail v&aacute;lido.');\n  /**\n  * Somente datas validas\n  */\n\n  jQuery.validator.addMethod(\"date\", function (value, element) {\n    return this.optional(element) || /^(((((0[1-9])|(1\\d)|(2[0-8]))\\/((0[1-9])|(1[0-2])))|((31\\/((0[13578])|(1[02])))|((29|30)\\/((0[1,3-9])|(1[0-2])))))\\/((20[0-9][0-9])|(19[0-9][0-9])))|((29\\/02\\/(19|20)(([02468][048])|([13579][26]))))$/.test(value);\n  }, '<i class=\"fas fa-times pr-2 pl-2\"></i> Digite uma data v&aacute;lido.');\n  /**\n  * Valida os campos de CPF\n  */\n\n  jQuery.validator.addMethod('cpfOnly', function (value, element) {\n    value = jQuery.trim(value);\n    value = value.replace('.', '');\n    value = value.replace('.', '');\n    cpf = value.replace('-', '');\n\n    while (cpf.length < 11) {\n      cpf = \"0\" + cpf;\n    }\n\n    var expReg = /^0+$|^1+$|^2+$|^3+$|^4+$|^5+$|^6+$|^7+$|^8+$|^9+$/;\n    var a = [];\n    var b = new Number();\n    var c = 11;\n\n    for (i = 0; i < 11; i++) {\n      a[i] = cpf.charAt(i);\n\n      if (i < 9) {\n        b += a[i] * --c;\n      }\n    }\n\n    if ((x = b % 11) < 2) {\n      a[9] = 0;\n    } else {\n      a[9] = 11 - x;\n    }\n\n    b = 0;\n    c = 11;\n\n    for (y = 0; y < 10; y++) {\n      b += a[y] * c--;\n    }\n\n    if ((x = b % 11) < 2) {\n      a[10] = 0;\n    } else {\n      a[10] = 11 - x;\n    }\n\n    if (cpf.charAt(9) != a[9] || cpf.charAt(10) != a[10] || cpf.match(expReg)) {\n      return this.optional(element) || false;\n    }\n\n    return this.optional(element) || true;\n  }, '<i class=\"fas fa-times pr-2 pl-2\"></i> Informe um CPF v&aacute;lido');\n  /**\n   * Valida os campos de CNPJ\n   */\n\n  jQuery.validator.addMethod('cnpjOnly', function (cnpj, element) {\n    cnpj = jQuery.trim(cnpj); // DEIXA APENAS OS NÚMEROS\n\n    cnpj = cnpj.replace('/', '');\n    cnpj = cnpj.replace('.', '');\n    cnpj = cnpj.replace('.', '');\n    cnpj = cnpj.replace('-', '');\n    var numeros, digitos, soma, i, resultado, pos, tamanho, digitos_iguais;\n    digitos_iguais = 1;\n\n    if (cnpj.length < 14 && cnpj.length < 15) {\n      return this.optional(element) || false;\n    }\n\n    for (i = 0; i < cnpj.length - 1; i++) {\n      if (cnpj.charAt(i) != cnpj.charAt(i + 1)) {\n        digitos_iguais = 0;\n        break;\n      }\n    }\n\n    if (!digitos_iguais) {\n      tamanho = cnpj.length - 2;\n      numeros = cnpj.substring(0, tamanho);\n      digitos = cnpj.substring(tamanho);\n      soma = 0;\n      pos = tamanho - 7;\n\n      for (i = tamanho; i >= 1; i--) {\n        soma += numeros.charAt(tamanho - i) * pos--;\n\n        if (pos < 2) {\n          pos = 9;\n        }\n      }\n\n      resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\n\n      if (resultado != digitos.charAt(0)) {\n        return this.optional(element) || false;\n      }\n\n      tamanho = tamanho + 1;\n      numeros = cnpj.substring(0, tamanho);\n      soma = 0;\n      pos = tamanho - 7;\n\n      for (i = tamanho; i >= 1; i--) {\n        soma += numeros.charAt(tamanho - i) * pos--;\n\n        if (pos < 2) {\n          pos = 9;\n        }\n      }\n\n      resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\n\n      if (resultado != digitos.charAt(1)) {\n        return this.optional(element) || false;\n      }\n\n      return this.optional(element) || true;\n    } else {\n      return this.optional(element) || false;\n    }\n  }, '<i class=\"fas fa-times pr-2 pl-2\"></i> Informe um CNPJ v&aacute;lido');\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/forms/jquery.validate.pt-br.js\n");

/***/ }),

/***/ 7:
/*!***********************************************************!*\
  !*** multi ./resources/js/forms/jquery.validate.pt-br.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /var/www/lumeldecor/resources/js/forms/jquery.validate.pt-br.js */"./resources/js/forms/jquery.validate.pt-br.js");


/***/ })

/******/ });